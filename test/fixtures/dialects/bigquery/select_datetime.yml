# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: e13cc258250ad092d85ff191ed705878973a55d91dfead0dcee554f7efa40973
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: gmv
          - dot: .
          - naked_identifier: _merchant_key
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: gmv
          - dot: .
          - naked_identifier: order_created_at
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: EXTRACT
            function_contents:
              bracketed:
                start_bracket: (
                date_part: DAY
                keyword: FROM
                expression:
                  column_reference:
                  - naked_identifier: gmv
                  - dot: .
                  - naked_identifier: order_created_at
                end_bracket: )
          alias_expression:
            alias_operator: AS
            naked_identifier: order_day
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            alias_expression:
              alias_operator: as
              naked_identifier: gmv
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - naked_identifier: gmv
          - dot: .
          - naked_identifier: datetime
          comparison_operator:
          - raw_comparison_operator: '>'
          - raw_comparison_operator: '='
          function:
            function_name:
              function_name_identifier: DATE_TRUNC
            function_contents:
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      function_name_identifier: DATE_SUB
                    function_contents:
                      bracketed:
                      - start_bracket: (
                      - expression:
                          function:
                            function_name:
                              function_name_identifier: CURRENT_DATE
                            function_contents:
                              bracketed:
                                start_bracket: (
                                end_bracket: )
                      - comma: ','
                      - expression:
                          interval_expression:
                            keyword: INTERVAL
                            expression:
                              numeric_literal: '2'
                            date_part: YEAR
                      - end_bracket: )
                comma: ','
                date_part: year
                end_bracket: )
      limit_clause:
        keyword: LIMIT
        numeric_literal: '1'
