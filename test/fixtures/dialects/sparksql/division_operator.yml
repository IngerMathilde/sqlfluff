# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d652563bc1cdbbe6fc5e3f08f24dfaed9a3641dd2ed803c084ba5495ed5f21e4
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          expression:
          - column_reference:
            - naked_identifier: t1
            - dot: .
            - naked_identifier: year_earn
          - binary_operator: /
          - column_reference:
            - naked_identifier: t1
            - dot: .
            - naked_identifier: avg_cost
          - binary_operator: /
          - column_reference:
            - naked_identifier: t1
            - dot: .
            - naked_identifier: rcp_cnt
          alias_expression:
            alias_expression_operator:
              keyword: as
            naked_identifier: fourth_cnt
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: dw
              - dot: .
              - naked_identifier: test
            alias_expression:
              naked_identifier: t1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          expression:
          - column_reference:
            - naked_identifier: t1
            - dot: .
            - naked_identifier: year_earn
          - binary_operator: /
          - column_reference:
            - naked_identifier: t1
            - dot: .
            - naked_identifier: avg_cost
          - binary_operator: /
          - column_reference:
            - naked_identifier: t1
            - dot: .
            - naked_identifier: jar
          alias_expression:
            alias_expression_operator:
              keyword: as
            naked_identifier: fourth_cnt
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: dw
              - dot: .
              - naked_identifier: test
            alias_expression:
              naked_identifier: t1
- statement_terminator: ;
