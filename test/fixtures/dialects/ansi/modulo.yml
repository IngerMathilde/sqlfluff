# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 846e1ac6a095434b2be1d42f5ad2ffd28bbfb8ecbf5df90f711da8991469e5f5
file:
  statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            case_expression:
            - keyword: CASE
            - when_clause:
              - keyword: WHEN
              - expression:
                - bracketed:
                    start_bracket: (
                    expression:
                    - column_reference:
                        naked_identifier: year_number
                    - binary_operator: '%'
                    - numeric_literal: '400'
                    - comparison_operator:
                        raw_comparison_operator: '='
                    - numeric_literal: '0'
                    end_bracket: )
                - binary_operator: OR
                - bracketed:
                    start_bracket: (
                    expression:
                    - column_reference:
                        naked_identifier: year_number
                    - binary_operator: '%'
                    - numeric_literal: '4'
                    - comparison_operator:
                        raw_comparison_operator: '='
                    - numeric_literal: '0'
                    - binary_operator: AND
                    - column_reference:
                        naked_identifier: year_number
                    - binary_operator: '%'
                    - numeric_literal: '100'
                    - comparison_operator:
                      - raw_comparison_operator: '!'
                      - raw_comparison_operator: '='
                    - numeric_literal: '0'
                    end_bracket: )
              - keyword: THEN
              - expression:
                  boolean_literal: 'TRUE'
            - else_clause:
                keyword: ELSE
                expression:
                  boolean_literal: 'FALSE'
            - keyword: END
          alias_expression:
            alias_expression_operator:
              keyword: AS
            naked_identifier: is_leap_year
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: mytable
